@model Resturant.Models.DB.Resturant

@{
    ViewBag.Title = "AddResturant";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>AddResturant</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Resturant</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Place, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="form-control" name="Place">
                <option>Assuit</option>
                <option>Sohag</option>
                <option>Cairo</option>
                <option>Elminia</option>
            </select>

            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="number" name="Rate" class="form-control" max="5" min="1" />
            @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ResturantPhoto, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" class="form-control" name="ResturantPhotofile" id="ResturantPhotofile" />
            <input type="text" name="ResturantPhoto" id="ResturantPhoto" hidden />
            @Html.ValidationMessageFor(model => model.ResturantPhoto, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Menu, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" class="form-control" name="Menufile" id="Menufile" />
            <input type="text" name="Menu" id="Menu" hidden />
            @Html.ValidationMessageFor(model => model.Menu, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.Descrtption, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Descrtption, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Descrtption, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    $("#Menufile").change(function () {
        var element = this;
        var formData = new FormData();
        var totalFiles = element.files.length;
        for (var i = 0; i < totalFiles; i++) {
            var file = element.files[i];
            formData.append("Photo", file);
        }
        $.ajax
            ({
                type: 'POST',
                url: '/Shared/UploadImage',
                dataType: 'json',
                data: formData,
                contentType: false,
                processData: false
            })
            .done(function (response) {
                console.log(response);
                if (response.Success)
                    //  $("#ImageUploaded").attr("src", response.ImageURL);
                    $("#Menu").val(response.ImageURL);
            })
            .fail(function () {
                alert("Fail")
            });

    });
    $("#ResturantPhotofile").change(function () {
        var element = this;
        var formData = new FormData();
        var totalFiles = element.files.length;
        for (var i = 0; i < totalFiles; i++) {
            var file = element.files[i];
            formData.append("Photo", file);
        }
        $.ajax
            ({
                type: 'POST',
                url: '/Shared/UploadImage',
                dataType: 'json',
                data: formData,
                contentType: false,
                processData: false
            })
            .done(function (response) {
                console.log(response);
                if (response.Success)
                    //  $("#ImageUploaded").attr("src", response.ImageURL);
                    $("#ResturantPhoto").val(response.ImageURL);
            })
            .fail(function () {
                alert("Fail")
            });

    });
  
</script>